CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
PROJECT(RedisGears)
OPTION(RG_BUILD_SO "Build shared library" OFF)
OPTION(RG_BUILD_MODULE "Build Redis module" ON)
OPTION(RG_BUILD_STATIC "Build static library" OFF)
OPTION(RG_ENABLE_PYTHON "Enable Python support" OFF)

ADD_DEFINITIONS("-DREDISMODULE_EXPERIMENTAL_API")
ADD_DEFINITIONS("-DDEPENDENCIES_URL=\"example.com\"")
ADD_DEFINITIONS("-DDEPENDENCIES_SHA256=\"0xdeadbeef\"")

INCLUDE_DIRECTORIES(
    ${PROJECT_SOURCE_DIR}
    ${PROJECT_SOURCE_DIR}/include
    ${PROJECT_SOURCE_DIR}/src
    ${PROJECT_SOURCE_DIR}/deps
    ${LIBEVENT_INCLUDE_DIRS})

SET(LIBEVENT_FIND_REQUIRED ON)
INCLUDE(cmake/FindLibevent.cmake)
FILE(GLOB RG_SRC "src/*.c" "src/utils/*.c")
ADD_LIBRARY(RG_CORE OBJECT ${RG_SRC} src/module-init/module-init.c)

IF (RG_BUILD_STATIC)
    ADD_LIBRARY(redisgearsS STATIC $<TARGET_OBJECTS:RG_CORE>)
    SET_TARGET_PROPERTIES(redisgearsS PROPERTIES OUTPUT_NAME "redisgears")
    TARGET_LINK_LIBRARIES(redisgearsS ${LIBEVENT_STATIC_LIBRARIES})
ENDIF()

IF (RG_BUILD_MODULE)
    ADD_LIBRARY(redisgears SHARED $<TARGET_OBJECTS:RG_CORE> "src/module-init/on-load.c")
    TARGET_LINK_LIBRARIES(redisgears ${LIBEVENT_STATIC_LIBRARIES})
    SET_TARGET_PROPERTIES(redisgears PROPERTIES PREFIX "")
    SET_TARGET_PROPERTIES(redisgears PROPERTIES SUFFIX ".so")
    SET_TARGET_PROPERTIES(redisgears PROPERTIES OUTPUT_NAME "redisgears")
    IF (APPLE) 
        SET_TARGET_PROPERTIES(redisgears PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
    ENDIF()
ENDIF()

IF (RG_BUILD_SO)
    ADD_LIBRARY(redisgearsSO SHARED $<TARGET_OBJECTS:RG_CORE>)
    TARGET_LINK_LIBRARIES(redisgearsSO ${LIBEVENT_LIBRARIES})
    SET_TARGET_PROPERTIES(redisgearsSO PROPERTIES OUTPUT_NAME "redisgears")
    IF (APPLE) 
        SET_TARGET_PROPERTIES(redisgearsSO PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
    ENDIF()
ENDIF()